
## Install ROS2

Installing ROS 2 Foxy Fitzroy
https://index.ros.org/doc/ros2/Installation/Foxy/

Tiryoh/ros2_setup_scripts_ubuntu
https://github.com/Tiryoh/ros2_setup_scripts_ubuntu

grep -F "source /opt/ros/$ROS_DISTRO/setup.bash" ~/.bashrc || echo "source /opt/ros/$ROS_DISTRO/setup.bash" >> ~/.bashrc

Tiryoh/docker-ros2-desktop-vnc
https://github.com/Tiryoh/docker-ros2-desktop-vnc

source ~/ros2_workshop/docker/ros2-desktop.bash
Browse to localhost

## Install dependencies

Ping command not found on Ubuntu 20.04 Focal Fossa Linux
https://linuxconfig.org/ping-command-not-found-on-ubuntu-20-04-focal-fossa-linux

sudo apt update
sudo apt install iputils-ping

## Create ROS2 workspace

https://industrial-training-master.readthedocs.io/en/melodic/_source/session7/ROS2-Basics.html

Start by creating a new ROS2 workspace.

mkdir -p ~/ros2_ws/src

Clone the ROS2 demos and examples repositories for our ROS2 distribution.

cd ~/ros2_ws/src
git clone -b $ROS_DISTRO git@github.com:ros2/demos.git
git clone -b $ROS_DISTRO git@github.com:ros2/examples.git

Install any required dependencies for the repositories using rosdep.

cd ~/ros2_ws
sudo apt update
rosdep install -q -y -r --ignore-src --from-paths src/

Build the workspace

source /opt/ros/$ROS_DISTRO/setup.bash
colcon build --symlink-install

echo 'source ~/ros2_ws/install/setup.bash' >> ~/.bashrc
source ~/.bashrc


Create new package in your workspace

cd ~/ros2_ws/src/
ros2 pkg create my_package

## Simulate Turtlebot3

Simulate the TurtleBot3
https://ubuntu.com/blog/simulate-the-turtlebot3

ROBOTIS emanual [ROS 2] Setup
https://emanual.robotis.com/docs/en/platform/turtlebot3/ros2_setup/

sudo apt install python3-vcstool

mkdir -p ~/turtlebot3_ws/src
cd ~/turtlebot3_ws

wget https://raw.githubusercontent.com/ROBOTIS-GIT/turtlebot3/ros2/turtlebot3.repos
vcs import src < turtlebot3.repos

colcon build --symlink-install

echo 'export GAZEBO_MODEL_PATH=$GAZEBO_MODEL_PATH:~/turtlebot3_ws/src/turtlebot3/turtlebot3_simulations/turtlebot3_gazebo/models' >> ~/.bashrc
echo 'export TURTLEBOT3_MODEL=waffle_pi' >> ~/.bashrc
source ~/.bashrc

ros2 launch turtlebot3_gazebo empty_world.launch.py

Change the simulation by launching with different worlds such as turtlebot3_house.launch.py or turtlebot3_world.launch.py.

Use ROS commands from any computer on the same network to explore your simulator:

ros2 topic list
ros2 service list
ros2 topic pub /cmd_vel geometry_msgs/Twist '{linear: {x: 1.0}}' -1
ros2 topic pub /cmd_vel geometry_msgs/Twist '{linear: {x: 0.0}}' -1
ros2 run turtlebot3_teleop teleop_keyboard







